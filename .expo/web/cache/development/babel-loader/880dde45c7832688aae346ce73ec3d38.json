{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Home from \"./components/Home\";\nimport Page2 from \"./components/Page2\";\nimport ImgPicker from \"./components/ImgPicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                    color = _ref2.color,\n                    size = _ref2.size;\n                var iconName;\n\n                if (route.name === 'Home') {\n                  iconName = focused ? 'ios-home' : 'ios-home';\n                } else if (route.name === 'Page2') {\n                  iconName = focused ? 'ios-newspaper' : 'ios-newspaper';\n                } else if (route.name === 'Immagine') {\n                  iconName = focused ? 'ios-image' : 'ios-image';\n                }\n\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: size,\n                  color: color\n                });\n              }\n            };\n          },\n          tabBarOptions: {\n            activeTintColor: '#004489',\n            inactiveTintColor: 'gray'\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Home\",\n            component: Home\n          }), _jsx(Tab.Screen, {\n            name: \"Page2\",\n            component: Page2\n          }), _jsx(Tab.Screen, {\n            name: \"Immagine\",\n            component: ImgPicker\n          })]\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/vincenzo/DATA/Labs/Testing/React_ReactNative/BasicReactNativeAppTemplate/App.js"],"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","Home","Page2","ImgPicker","Tab","App","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,OAAOC,QAAP;AAEA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,SAAP;;;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;;IAEqBM,G;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,KAAC,mBAAD;AAAA,kBACI,MAAC,GAAD,CAAK,SAAL;AACE,UAAA,aAAa,EAAE;AAAA,gBAAGC,KAAH,QAAGA,KAAH;AAAA,mBAAgB;AAC7BC,cAAAA,UAAU,EAAE,2BAA8B;AAAA,oBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,oBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,oBAAXC,IAAW,SAAXA,IAAW;AACxC,oBAAIC,QAAJ;;AAEA,oBAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACzBD,kBAAAA,QAAQ,GAAGH,OAAO,GACd,UADc,GAEd,UAFJ;AAGD,iBAJD,MAKK,IAAGF,KAAK,CAACM,IAAN,KAAe,OAAlB,EAA2B;AAC9BD,kBAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,eAAvC;AACD,iBAFI,MAGA,IAAGF,KAAK,CAACM,IAAN,KAAe,UAAlB,EAA8B;AACjCD,kBAAAA,QAAQ,GAAGH,OAAO,GAAG,WAAH,GAAiB,WAAnC;AACD;;AAED,uBAAO,KAAC,QAAD;AAAU,kBAAA,IAAI,EAAEG,QAAhB;AAA0B,kBAAA,IAAI,EAAED,IAAhC;AAAsC,kBAAA,KAAK,EAAED;AAA7C,kBAAP;AACD;AAjB4B,aAAhB;AAAA,WADjB;AAoBE,UAAA,aAAa,EAAE;AACbI,YAAAA,eAAe,EAAE,SADJ;AAEbC,YAAAA,iBAAiB,EAAE;AAFN,WApBjB;AAAA,qBAyBE,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAC,MAAjB;AAAwB,YAAA,SAAS,EAAEb;AAAnC,YAzBF,EA0BE,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAyB,YAAA,SAAS,EAAEC;AAApC,YA1BF,EA2BE,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAC,UAAjB;AAA4B,YAAA,SAAS,EAAEC;AAAvC,YA3BF;AAAA;AADJ,QADF;AAkCD;;;;EApC8BN,KAAK,CAACkB,S;;SAAlBV,G","sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native'; \nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport Home from './components/Home';\nimport Page2 from './components/Page2';\nimport ImgPicker from './components/ImgPicker';\n\nconst Tab = createBottomTabNavigator();\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <NavigationContainer>\n          <Tab.Navigator\n            screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n\n                if (route.name === 'Home') {\n                  iconName = focused\n                    ? 'ios-home'\n                    : 'ios-home';\n                } \n                else if(route.name === 'Page2') {\n                  iconName = focused ? 'ios-newspaper' : 'ios-newspaper';\n                }\n                else if(route.name === 'Immagine') {\n                  iconName = focused ? 'ios-image' : 'ios-image';\n                }\n\n                return <Ionicons name={iconName} size={size} color={color} />;\n              },\n            })}\n            tabBarOptions={{\n              activeTintColor: '#004489',\n              inactiveTintColor: 'gray',\n            }}\n          >\n            <Tab.Screen name=\"Home\" component={Home} /> \n            <Tab.Screen name=\"Page2\" component={Page2} />\n            <Tab.Screen name=\"Immagine\" component={ImgPicker} />\n          </Tab.Navigator>\n        </NavigationContainer>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}